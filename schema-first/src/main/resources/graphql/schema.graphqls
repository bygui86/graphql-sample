
# The GraphQL Tools library works by processing GraphQL Schema files to build the correct structure and then wires special beans to this structure. 
# The Spring Boot GraphQL starter automatically finds these schema files.
# These files need to be saved with the extension “.graphqls” and can be present anywhere on the classpath. We can also have as many of these files as 
# desired, so we can split the scheme up into modules as desired.
# The one requirement is that there must be exactly one root query, and up to one root mutation. This can not be split across files, unlike the rest 
# of the scheme. This is a limitation of the GraphQL Schema definition itself, and not of the Java implementation.

### SCHEMA ###

schema {
	query: Query
	mutation: Mutation
}


###	PLEASE NOTE
#	The “!” at the end of some names indicates that this is a non-nullable type.
###


### QUERIES ###

type Query {
	## Posts
	allPosts: [Post]!
	# Pagination sample ("Int = 0" means that if the value is not specified, 0 will be taken as default)
	recentPosts(offset: Int = 0, count: Int = 0): [Post]!
	## Authors
	allAuthors: [Author]!
	# Filter sample
	filterAuthors(filter: AuthorFilter!): [Author]!
}


### MUTATIONS ###

type Mutation {
	writePost(title: String!, text: String!, category: String, author: String!) : Post!
}


### INPUTS ###

input AuthorFilter {
	thumbnail_not_null_not_empty: Boolean
	name_contains: String
}


### TYPES ###

type Post {
	id: ID!
	title: String!
	text: String!
	category: String
	author: Author
}

type Author {
	id: ID!
	name: String!
	thumbnail: String
	posts: [Post]!
}
